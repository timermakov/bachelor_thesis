###########
# BUILDER #
###########

FROM python:3.8.3-alpine as builder

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apk update && apk add postgresql-dev gcc python3-dev musl-dev wget build-base

# Install TA-Lib from source
RUN wget https://github.com/ta-lib/ta-lib/releases/download/v0.6.4/ta-lib-0.6.4-src.tar.gz && \
	tar -xzf ta-lib-0.6.4-src.tar.gz && \
	cd ta-lib-0.6.4/ && \
	./configure --prefix=/usr && \
	make && \
	make install && \
	cd .. && \
	rm -rf ta-lib-0.6.4 ta-lib-0.6.4-src.tar.gz

RUN pip install --upgrade pip

COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

COPY . .

#########
# FINAL #
#########

FROM python:3.8.3-alpine

RUN mkdir -p /home/app
RUN addgroup -S app && adduser -S app -G app

ENV HOME=/home/app
ENV APP_HOME=/home/app/backend
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

RUN apk update && apk add libpq libffi-dev openssl-dev cargo wget build-base

# Install TA-Lib from source
RUN wget https://github.com/ta-lib/ta-lib/releases/download/v0.6.4/ta-lib-0.6.4-src.tar.gz && \
	tar -xzf ta-lib-0.6.4-src.tar.gz && \
	cd ta-lib-0.6.4/ && \
	./configure --prefix=/usr && \
	make && \
	make install && \
	cd .. && \
	rm -rf ta-lib-0.6.4 ta-lib-0.6.4-src.tar.gz

COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

COPY . $APP_HOME

RUN chown -R app:app $APP_HOME

USER app

ENTRYPOINT ["/home/app/backend/entrypoint.prod.sh"]
