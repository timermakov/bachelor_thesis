services:
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=tradinghelper_prod
      - POSTGRES_USER=tradinghelper
      - POSTGRES_PASSWORD=tradinghelper
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U tradinghelper" ]
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    expose:
      - 8000
    volumes:
      - static_volume:/home/app/backend/staticfiles
    env_file:
      - ./backend/.env.prod
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:stable-alpine
    build:
      context: .
      dockerfile: nginx/Dockerfile.prod
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    env_file:
      - ./nginx/.env
    volumes:
      - static_volume:/home/app/backend/staticfiles
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - django
      - db

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  static_volume:
  vue_dist:
